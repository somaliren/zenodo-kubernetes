kind: PersistentVolume
apiVersion: v1
metadata:
  name: zenodo-es-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 900Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/elasticsearch
    server: 154.73.25.81Since I am at step 4, Do these passwords need to match the passwords that the services were using before the container was created? I did not set any password for the four basic services zenodo uses and in the Zenodo-Kubernetes software, I do not have any password for redis-deployment.yml, mq-deployment.yml, and es-deployment.yml files. The only deployment that has password keys in it is the postgres-deployment.yml and this is how I configured the password:
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zenodo-es-pv-claim
  labels:
    type: es-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zenodo-postgres-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 900Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/db
    server: 154.73.25.81
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zenodo-postgres-pv-claim
  labels:
    type: db-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zenodo-archive-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 900Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/archive
    server: 154.73.25.81
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zenodo-archive-pv-claim
  labels:
    type: archive-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 900G
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zenodo-data-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 800Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/data
    server: 154.73.25.81
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: zenodo-html-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/html
    server: 154.73.25.81
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zenodo-html-pv-claim
  labels:
    type: html-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zenodo-data-pv-claim
  labels:
    type: data-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 800Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: backup-pv-volume
  labels:
    type: nfs
spec:
  storageClassName: remote
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /var/sorer/backup
    server: 154.73.25.81
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: backup-pv-claim
  labels:
    type: backup-storage
spec:
  storageClassName: remote
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi